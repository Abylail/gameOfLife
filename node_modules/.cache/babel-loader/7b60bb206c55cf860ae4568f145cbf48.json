{"remainingRequest":"/Users/abylay/Desktop/gameOfLife/node_modules/babel-loader/lib/index.js!/Users/abylay/Desktop/gameOfLife/node_modules/eslint-loader/index.js??ref--13-0!/Users/abylay/Desktop/gameOfLife/src/store/index.js","dependencies":[{"path":"/Users/abylay/Desktop/gameOfLife/src/store/index.js","mtime":1626808097982},{"path":"/Users/abylay/Desktop/gameOfLife/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abylay/Desktop/gameOfLife/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/abylay/Desktop/gameOfLife/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Vc2Vycy9hYnlsYXkvRGVza3RvcC9nYW1lT2ZMaWZlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVnVleCBmcm9tICJ2dWV4IjsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICAvLyBzZXR0aW5ncwogICAgcnVsZXM6IHsKICAgICAgMTogWzIsIDNdLAogICAgICAvLyBpZiB3ZSBoYXZlIDIsIDMgbGl2ZXMgY2VsbCB3aWxsIGxpdmUKICAgICAgMDogWzNdIC8vIGlmIHdlIGhhdmUgMyBsaXZlcyBjZWxsIHdpbGwgbGl2ZQoKICAgIH0sCiAgICBtaW5TaXplOiA0LAogICAgLy8gbWluaW11bSB0YWJsZSBzaXplCiAgICBtYXhTaXplOiAxMDAwLAogICAgLy8gbWluaW11bSB0YWJsZSBzaXplCiAgICAvLyBkeW5hbWljCiAgICBkYXRhOiBbXSwKICAgIC8vIGFjdGl2ZSB0YWJsZSBkYXRhCiAgICBzaXplOiAyMDAsCiAgICAvLyBzaXplIG9mIHRhYmxlCiAgICBzaG93R3JpZDogZmFsc2UsCiAgICAvLyBzaG93IGdyaWQgb3Igbm8KICAgIGlzUGxheWluZzogdHJ1ZSwKICAgIC8vIGlzIHBsYXlpbmcKICAgIGlzQXV0bzogdHJ1ZSwKICAgIC8vIGlzIGl0IGdvaW5nIGF1dG9tYXRpY2FseQogICAgZnJlcXVlbmN5OiAuMSwKICAgIC8vIGhvdyBmcmVxdWVudGx5IHJlbmRlcmluZyBpbiBzZWNvbmRzCiAgICByYW5kb21WYXJpZXR5OiAuOSAvLyByYW5kb20gdmFyaWV0eQoKICB9LAogIGdldHRlcnM6IHsKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmRhdGE7CiAgICB9LAogICAgZ2V0U2l6ZTogZnVuY3Rpb24gZ2V0U2l6ZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2l6ZTsKICAgIH0sCiAgICBnZXRTaG93R3JpZDogZnVuY3Rpb24gZ2V0U2hvd0dyaWQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnNob3dHcmlkOwogICAgfSwKICAgIGlzU2l6ZU1hdGNoZXM6IGZ1bmN0aW9uIGlzU2l6ZU1hdGNoZXMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmRhdGEubGVuZ3RoID09PSBzdGF0ZS5zaXplOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXREYXRhOiBmdW5jdGlvbiBzZXREYXRhKHN0YXRlLCB2YWx1ZSkgewogICAgICBzdGF0ZS5kYXRhID0gdmFsdWU7CiAgICB9LAogICAgc2V0OiBmdW5jdGlvbiBzZXQoc3RhdGUsIF9yZWYpIHsKICAgICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksCiAgICAgICAgICBuYW1lc3BhY2UgPSBfcmVmMlswXSwKICAgICAgICAgIHZhbHVlID0gX3JlZjJbMV07CgogICAgICBzdGF0ZVtuYW1lc3BhY2VdID0gdmFsdWU7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBnZW5lcmF0ZVJhbmRvbURhdGE6IGZ1bmN0aW9uIGdlbmVyYXRlUmFuZG9tRGF0YShfcmVmMykgewogICAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaCwKICAgICAgICAgIHN0YXRlID0gX3JlZjMuc3RhdGUsCiAgICAgICAgICBnZXR0ZXJzID0gX3JlZjMuZ2V0dGVyczsKICAgICAgdmFyIG5ld0RhdGEgPSBbXTsKCiAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IHN0YXRlLnNpemU7IHJvdysrKSB7CiAgICAgICAgdmFyIHJvd0RhdGEgPSBbXTsKCiAgICAgICAgZm9yICh2YXIgY2VsbCA9IDA7IGNlbGwgPCBzdGF0ZS5zaXplOyBjZWxsKyspIHsKICAgICAgICAgIHZhciBjZWxsVmFsdWUgPSBNYXRoLnJhbmRvbSgpIDwgc3RhdGUucmFuZG9tVmFyaWV0eTsKICAgICAgICAgIHJvd0RhdGEucHVzaChjZWxsVmFsdWUpOwogICAgICAgIH0KCiAgICAgICAgbmV3RGF0YS5wdXNoKHJvd0RhdGEpOwogICAgICB9CgogICAgICBzdGF0ZS5kYXRhID0gbmV3RGF0YTsgLy8gcnVuIGlzIGF1dG8gcGxheWluZwoKICAgICAgdmFyIGNhbkRvTmV4dCA9IHN0YXRlLmlzQXV0byAmJiBnZXR0ZXJzLmlzU2l6ZU1hdGNoZXM7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChjYW5Eb05leHQpIGRpc3BhdGNoKCJnZW5lcmF0ZURhdGEiKTsKICAgICAgfSwgc3RhdGUuZnJlcXVlbmN5ICogMTAwMCk7CiAgICB9LAogICAgLy8gZ2VuZXJhdGluZyBuZXh0IGRhdGEgYnkgYWN0aXZlIGRhdGEKICAgIGdlbmVyYXRlRGF0YTogZnVuY3Rpb24gZ2VuZXJhdGVEYXRhKF9yZWY0KSB7CiAgICAgIHZhciBzdGF0ZSA9IF9yZWY0LnN0YXRlLAogICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNC5kaXNwYXRjaCwKICAgICAgICAgIGdldHRlcnMgPSBfcmVmNC5nZXR0ZXJzOwogICAgICBjb25zb2xlLmxvZygiUkVOREVSIik7CiAgICAgIHZhciBuZXh0RGF0YSA9IFtdOwogICAgICBzdGF0ZS5kYXRhLmZvckVhY2goZnVuY3Rpb24gKHJvdywgcm93SW5kZXgpIHsKICAgICAgICB2YXIgbmV3Um93ID0gW107CiAgICAgICAgcm93LmZvckVhY2goZnVuY3Rpb24gKGNlbGwsIGNlbGxJbmRleCkgewogICAgICAgICAgdmFyIGFjdGl2ZUNlbGxBcm91bmQgPSAwOwogICAgICAgICAgdmFyIHByZXZSb3dJbmRleCA9IHJvd0luZGV4IC0gMTsKICAgICAgICAgIHZhciBwcmV2Q2VsbEluZGV4ID0gY2VsbEluZGV4IC0gMTsKCiAgICAgICAgICBmb3IgKHZhciBpID0gcHJldlJvd0luZGV4OyBpIDwgcHJldlJvd0luZGV4ICsgMzsgaSsrKSB7CiAgICAgICAgICAgIGlmIChpID49IDAgJiYgc3RhdGUuZGF0YVtpXSkgewogICAgICAgICAgICAgIGZvciAodmFyIGogPSBwcmV2Q2VsbEluZGV4OyBqIDwgcHJldkNlbGxJbmRleCArIDM7IGorKykgewogICAgICAgICAgICAgICAgdmFyIGlzU2FtZVBvc2l0aW9uID0gaSA9PT0gcm93SW5kZXggJiYgaiA9PT0gY2VsbEluZGV4OwoKICAgICAgICAgICAgICAgIGlmICghaXNTYW1lUG9zaXRpb24gJiYgaiA+PSAwICYmIHN0YXRlLmRhdGFbaV1bal0pIHsKICAgICAgICAgICAgICAgICAgYWN0aXZlQ2VsbEFyb3VuZCsrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIHZhciBjZWxsTmV4dFZhbHVlID0gc3RhdGUucnVsZXNbK2NlbGxdLmluY2x1ZGVzKGFjdGl2ZUNlbGxBcm91bmQpOwogICAgICAgICAgbmV3Um93LnB1c2goY2VsbE5leHRWYWx1ZSk7CiAgICAgICAgfSk7CiAgICAgICAgbmV4dERhdGEucHVzaChuZXdSb3cpOwogICAgICB9KTsKICAgICAgc3RhdGUuZGF0YSA9IG5leHREYXRhOyAvLyBydW4gaXMgYXV0byBwbGF5aW5nCgogICAgICB2YXIgY2FuRG9OZXh0ID0gc3RhdGUuaXNBdXRvICYmIGdldHRlcnMuaXNTaXplTWF0Y2hlczsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKGNhbkRvTmV4dCkgZGlzcGF0Y2goImdlbmVyYXRlRGF0YSIpOwogICAgICB9LCBzdGF0ZS5mcmVxdWVuY3kgKiAxMDAwKTsKICAgIH0sCiAgICB0b2dnbGVJc0F1dG86IGZ1bmN0aW9uIHRvZ2dsZUlzQXV0byhfcmVmNSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0LAogICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNS5kaXNwYXRjaCwKICAgICAgICAgIHN0YXRlID0gX3JlZjUuc3RhdGU7CiAgICAgIGNvbW1pdCgic2V0IiwgWyJpc0F1dG8iLCAhc3RhdGUuaXNBdXRvXSk7CiAgICAgIGlmIChzdGF0ZS5pc0F1dG8pIGRpc3BhdGNoKCJnZW5lcmF0ZURhdGEiKTsKICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["/Users/abylay/Desktop/gameOfLife/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","rules","minSize","maxSize","data","size","showGrid","isPlaying","isAuto","frequency","randomVariety","getters","getData","getSize","getShowGrid","isSizeMatches","length","mutations","setData","value","set","namespace","actions","generateRandomData","dispatch","newData","row","rowData","cell","cellValue","Math","random","push","canDoNext","setTimeout","generateData","console","log","nextData","forEach","rowIndex","newRow","cellIndex","activeCellAround","prevRowIndex","prevCellIndex","i","j","isSamePosition","cellNextValue","includes","toggleIsAuto","commit"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    state: {\n        // settings\n        rules: {\n            1: [2, 3], // if we have 2, 3 lives cell will live\n            0: [3] // if we have 3 lives cell will live\n        },\n        minSize: 4, // minimum table size\n        maxSize: 1000, // minimum table size\n\n        // dynamic\n        data: [], // active table data\n\n        size: 200, // size of table\n        showGrid: false, // show grid or no\n\n        isPlaying: true, // is playing\n        isAuto: true, // is it going automaticaly\n        frequency: .1, // how frequently rendering in seconds\n        randomVariety: .9, // random variety\n\n    },\n    getters: {\n        getData: state => state.data,\n        getSize: state => state.size,\n        getShowGrid: state => state.showGrid,\n        isSizeMatches: state => state.data.length === state.size,\n    },\n    mutations: {\n        setData(state, value) {\n            state.data = value;\n        },\n        set(state, [namespace, value]) {\n            state[namespace] = value;\n        }\n    },\n    actions: {\n        generateRandomData({ dispatch, state, getters }) {\n            let newData = [];\n            for(let row = 0; row < state.size; row++) {\n                let rowData = [];\n                for(let cell = 0; cell < state.size; cell++) {\n                    const cellValue = Math.random() < state.randomVariety;\n                    rowData.push(cellValue);\n                }\n                newData.push(rowData);\n            }\n            state.data = newData;\n\n\n            // run is auto playing\n            const canDoNext = state.isAuto && getters.isSizeMatches;\n            setTimeout(() => {\n                if(canDoNext) dispatch(\"generateData\")\n            }, state.frequency * 1000);\n        },\n        // generating next data by active data\n        generateData({ state, dispatch, getters }) {\n            console.log(\"RENDER\");\n            let nextData = [];\n            state.data.forEach((row, rowIndex) => {\n                let newRow = [];\n                row.forEach((cell, cellIndex) => {\n                    let activeCellAround = 0;\n                    const prevRowIndex = rowIndex - 1;\n                    const prevCellIndex = cellIndex - 1;\n                    for(let i = prevRowIndex; i < prevRowIndex + 3; i++) {\n                        if(i >= 0 && state.data[i]) {\n                            for(let j = prevCellIndex; j < prevCellIndex + 3; j++) {\n                                const isSamePosition = i === rowIndex && j === cellIndex;\n                                if(!isSamePosition && j >= 0 && state.data[i][j]) {\n                                    activeCellAround++;\n                                }\n                            }\n                        }\n                    }\n\n                    const cellNextValue = state.rules[+cell].includes(activeCellAround);\n                    newRow.push(cellNextValue);\n                })\n                nextData.push(newRow);\n            });\n            state.data = nextData;\n\n\n\n            // run is auto playing\n            const canDoNext = state.isAuto && getters.isSizeMatches;\n            setTimeout(() => {\n                if(canDoNext) dispatch(\"generateData\")\n            }, state.frequency * 1000);\n        },\n        toggleIsAuto({ commit, dispatch, state }) {\n            commit(\"set\", [\"isAuto\", !state.isAuto]);\n            if(state.isAuto) dispatch(\"generateData\");\n        }\n    }\n})"]}]}