{"remainingRequest":"/home/abylai/Desktop/gameOfLife/node_modules/babel-loader/lib/index.js!/home/abylai/Desktop/gameOfLife/node_modules/eslint-loader/index.js??ref--13-0!/home/abylai/Desktop/gameOfLife/src/store/index.js","dependencies":[{"path":"/home/abylai/Desktop/gameOfLife/src/store/index.js","mtime":1626853528921},{"path":"/home/abylai/Desktop/gameOfLife/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abylai/Desktop/gameOfLife/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/abylai/Desktop/gameOfLife/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL2FieWxhaS9EZXNrdG9wL2dhbWVPZkxpZmUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IFZ1ZXggZnJvbSAidnVleCI7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgLy8gc2V0dGluZ3MKICAgIHJ1bGVzOiB7CiAgICAgIDE6IFsyLCAzXSwKICAgICAgLy8gaWYgd2UgaGF2ZSAyLCAzIGxpdmVzIGNlbGwgd2lsbCBsaXZlCiAgICAgIDA6IFszXSAvLyBpZiB3ZSBoYXZlIDMgbGl2ZXMgY2VsbCB3aWxsIGxpdmUKCiAgICB9LAogICAgbWluU2l6ZTogNCwKICAgIC8vIG1pbmltdW0gdGFibGUgc2l6ZQogICAgbWF4U2l6ZTogMTAwMCwKICAgIC8vIG1pbmltdW0gdGFibGUgc2l6ZQogICAgLy8gZHluYW1pYwogICAgZGF0YTogW10sCiAgICAvLyBhY3RpdmUgdGFibGUgZGF0YQogICAgc2l6ZTogMTAwLAogICAgLy8gc2l6ZSBvZiB0YWJsZQogICAgc2hvd0dyaWQ6IGZhbHNlLAogICAgLy8gc2hvdyBncmlkIG9yIG5vCiAgICBpc0F1dG86IHRydWUsCiAgICAvLyBpcyBpdCBnb2luZyBhdXRvbWF0aWNhbHkKICAgIGZyZXF1ZW5jeTogLjEsCiAgICAvLyBob3cgZnJlcXVlbnRseSByZW5kZXJpbmcgaW4gc2Vjb25kcwogICAgcmFuZG9tVmFyaWV0eTogLjUsCiAgICAvLyByYW5kb20gdmFyaWV0eQogICAgdGltZW91dDogbnVsbAogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGF0YTsKICAgIH0sCiAgICBnZXRTaXplOiBmdW5jdGlvbiBnZXRTaXplKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zaXplOwogICAgfSwKICAgIGdldFNob3dHcmlkOiBmdW5jdGlvbiBnZXRTaG93R3JpZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2hvd0dyaWQ7CiAgICB9LAogICAgaXNTaXplTWF0Y2hlczogZnVuY3Rpb24gaXNTaXplTWF0Y2hlcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGF0YS5sZW5ndGggPT09IHN0YXRlLnNpemU7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldERhdGE6IGZ1bmN0aW9uIHNldERhdGEoc3RhdGUsIHZhbHVlKSB7CiAgICAgIHN0YXRlLmRhdGEgPSB2YWx1ZTsKICAgIH0sCiAgICBjcmVhdGVUaW1lb3V0OiBmdW5jdGlvbiBjcmVhdGVUaW1lb3V0KHN0YXRlLCBjYWxsYmFjaykgewogICAgICBzdGF0ZS50aW1lb3V0ID0gc2V0VGltZW91dChjYWxsYmFjaywgc3RhdGUuZnJlcXVlbmN5ICogMTAwMCk7CiAgICB9LAogICAgY2xlYXJUaW1lb3V0OiBmdW5jdGlvbiAoX2NsZWFyVGltZW91dCkgewogICAgICBmdW5jdGlvbiBjbGVhclRpbWVvdXQoX3gpIHsKICAgICAgICByZXR1cm4gX2NsZWFyVGltZW91dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICBjbGVhclRpbWVvdXQudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF9jbGVhclRpbWVvdXQudG9TdHJpbmcoKTsKICAgICAgfTsKCiAgICAgIHJldHVybiBjbGVhclRpbWVvdXQ7CiAgICB9KGZ1bmN0aW9uIChzdGF0ZSkgewogICAgICBjbGVhclRpbWVvdXQoc3RhdGUudGltZW91dCk7CiAgICB9KSwKICAgIHNldDogZnVuY3Rpb24gc2V0KHN0YXRlLCBfcmVmKSB7CiAgICAgIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDIpLAogICAgICAgICAgbmFtZXNwYWNlID0gX3JlZjJbMF0sCiAgICAgICAgICB2YWx1ZSA9IF9yZWYyWzFdOwoKICAgICAgc3RhdGVbbmFtZXNwYWNlXSA9IHZhbHVlOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgZ2VuZXJhdGVSYW5kb21EYXRhOiBmdW5jdGlvbiBnZW5lcmF0ZVJhbmRvbURhdGEoX3JlZjMpIHsKICAgICAgdmFyIGRpc3BhdGNoID0gX3JlZjMuZGlzcGF0Y2gsCiAgICAgICAgICBzdGF0ZSA9IF9yZWYzLnN0YXRlLAogICAgICAgICAgZ2V0dGVycyA9IF9yZWYzLmdldHRlcnMsCiAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgIHZhciBuZXdEYXRhID0gW107CgogICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBzdGF0ZS5zaXplOyByb3crKykgewogICAgICAgIHZhciByb3dEYXRhID0gW107CgogICAgICAgIGZvciAodmFyIGNlbGwgPSAwOyBjZWxsIDwgc3RhdGUuc2l6ZTsgY2VsbCsrKSB7CiAgICAgICAgICB2YXIgY2VsbFZhbHVlID0gTWF0aC5yYW5kb20oKSA8IHN0YXRlLnJhbmRvbVZhcmlldHk7CiAgICAgICAgICByb3dEYXRhLnB1c2goY2VsbFZhbHVlKTsKICAgICAgICB9CgogICAgICAgIG5ld0RhdGEucHVzaChyb3dEYXRhKTsKICAgICAgfQoKICAgICAgc3RhdGUuZGF0YSA9IG5ld0RhdGE7IC8vIHJ1biBpcyBhdXRvIHBsYXlpbmcKCiAgICAgIHZhciBjYW5Eb05leHQgPSBzdGF0ZS5pc0F1dG8gJiYgZ2V0dGVycy5pc1NpemVNYXRjaGVzOwogICAgICBjb21taXQoImNyZWF0ZVRpbWVvdXQiLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKGNhbkRvTmV4dCkgZGlzcGF0Y2goImdlbmVyYXRlRGF0YSIpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyBnZW5lcmF0aW5nIG5leHQgZGF0YSBieSBhY3RpdmUgZGF0YQogICAgZ2VuZXJhdGVEYXRhOiBmdW5jdGlvbiBnZW5lcmF0ZURhdGEoX3JlZjQpIHsKICAgICAgdmFyIHN0YXRlID0gX3JlZjQuc3RhdGUsCiAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY0LmRpc3BhdGNoLAogICAgICAgICAgZ2V0dGVycyA9IF9yZWY0LmdldHRlcnMsCiAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgIHZhciBuZXh0RGF0YSA9IFtdOwogICAgICBzdGF0ZS5kYXRhLmZvckVhY2goZnVuY3Rpb24gKHJvdywgcm93SW5kZXgpIHsKICAgICAgICB2YXIgbmV3Um93ID0gW107CiAgICAgICAgcm93LmZvckVhY2goZnVuY3Rpb24gKGNlbGwsIGNlbGxJbmRleCkgewogICAgICAgICAgdmFyIGFjdGl2ZUNlbGxBcm91bmQgPSAwOwogICAgICAgICAgdmFyIHByZXZSb3dJbmRleCA9IHJvd0luZGV4IC0gMTsKICAgICAgICAgIHZhciBwcmV2Q2VsbEluZGV4ID0gY2VsbEluZGV4IC0gMTsKCiAgICAgICAgICBmb3IgKHZhciBpID0gcHJldlJvd0luZGV4OyBpIDwgcHJldlJvd0luZGV4ICsgMzsgaSsrKSB7CiAgICAgICAgICAgIGlmIChpID49IDAgJiYgc3RhdGUuZGF0YVtpXSkgewogICAgICAgICAgICAgIGZvciAodmFyIGogPSBwcmV2Q2VsbEluZGV4OyBqIDwgcHJldkNlbGxJbmRleCArIDM7IGorKykgewogICAgICAgICAgICAgICAgdmFyIGlzU2FtZVBvc2l0aW9uID0gaSA9PT0gcm93SW5kZXggJiYgaiA9PT0gY2VsbEluZGV4OwoKICAgICAgICAgICAgICAgIGlmICghaXNTYW1lUG9zaXRpb24gJiYgaiA+PSAwICYmIHN0YXRlLmRhdGFbaV1bal0pIHsKICAgICAgICAgICAgICAgICAgYWN0aXZlQ2VsbEFyb3VuZCsrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIHZhciBjZWxsTmV4dFZhbHVlID0gc3RhdGUucnVsZXNbK2NlbGxdLmluY2x1ZGVzKGFjdGl2ZUNlbGxBcm91bmQpOwogICAgICAgICAgbmV3Um93LnB1c2goY2VsbE5leHRWYWx1ZSk7CiAgICAgICAgfSk7CiAgICAgICAgbmV4dERhdGEucHVzaChuZXdSb3cpOwogICAgICB9KTsKICAgICAgc3RhdGUuZGF0YSA9IG5leHREYXRhOyAvLy8gcnVuIGlzIGF1dG8gcGxheWluZwoKICAgICAgdmFyIGNhbkRvTmV4dCA9IHN0YXRlLmlzQXV0byAmJiBnZXR0ZXJzLmlzU2l6ZU1hdGNoZXM7CiAgICAgIGNvbW1pdCgiY3JlYXRlVGltZW91dCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoY2FuRG9OZXh0KSBkaXNwYXRjaCgiZ2VuZXJhdGVEYXRhIik7CiAgICAgIH0pOwogICAgfSwKICAgIHRvZ2dsZUlzQXV0bzogZnVuY3Rpb24gdG9nZ2xlSXNBdXRvKF9yZWY1KSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmNS5jb21taXQsCiAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY1LmRpc3BhdGNoLAogICAgICAgICAgc3RhdGUgPSBfcmVmNS5zdGF0ZTsKICAgICAgY29tbWl0KCJzZXQiLCBbImlzQXV0byIsICFzdGF0ZS5pc0F1dG9dKTsKICAgICAgaWYgKHN0YXRlLmlzQXV0bykgZGlzcGF0Y2goImdlbmVyYXRlRGF0YSIpOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["/home/abylai/Desktop/gameOfLife/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","rules","minSize","maxSize","data","size","showGrid","isAuto","frequency","randomVariety","timeout","getters","getData","getSize","getShowGrid","isSizeMatches","length","mutations","setData","value","createTimeout","callback","setTimeout","clearTimeout","set","namespace","actions","generateRandomData","dispatch","commit","newData","row","rowData","cell","cellValue","Math","random","push","canDoNext","generateData","nextData","forEach","rowIndex","newRow","cellIndex","activeCellAround","prevRowIndex","prevCellIndex","i","j","isSamePosition","cellNextValue","includes","toggleIsAuto"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    state: {\n        // settings\n        rules: {\n            1: [2, 3], // if we have 2, 3 lives cell will live\n            0: [3] // if we have 3 lives cell will live\n        },\n        minSize: 4, // minimum table size\n        maxSize: 1000, // minimum table size\n\n        // dynamic\n        data: [], // active table data\n\n        size: 100, // size of table\n        showGrid: false, // show grid or no\n\n        isAuto: true, // is it going automaticaly\n        frequency: .1, // how frequently rendering in seconds\n        randomVariety: .5, // random variety\n\n        timeout: null,\n    },\n    getters: {\n        getData: state => state.data,\n        getSize: state => state.size,\n        getShowGrid: state => state.showGrid,\n        isSizeMatches: state => state.data.length === state.size,\n    },\n    mutations: {\n        setData(state, value) {\n            state.data = value;\n        },\n        createTimeout(state, callback) {\n            state.timeout = setTimeout(callback, state.frequency * 1000);\n        },\n        clearTimeout(state) {\n          clearTimeout(state.timeout);\n        },\n        set(state, [namespace, value]) {\n            state[namespace] = value;\n        }\n    },\n    actions: {\n        generateRandomData({ dispatch, state, getters, commit }) {\n            let newData = [];\n            for(let row = 0; row < state.size; row++) {\n                let rowData = [];\n                for(let cell = 0; cell < state.size; cell++) {\n                    const cellValue = Math.random() < state.randomVariety;\n                    rowData.push(cellValue);\n                }\n                newData.push(rowData);\n            }\n            state.data = newData;\n\n\n            // run is auto playing\n            const canDoNext = state.isAuto && getters.isSizeMatches;\n            commit(\"createTimeout\", () => {\n                if(canDoNext) dispatch(\"generateData\")\n            })\n        },\n        // generating next data by active data\n        generateData({ state, dispatch, getters, commit }) {\n            let nextData = [];\n            state.data.forEach((row, rowIndex) => {\n                let newRow = [];\n                row.forEach((cell, cellIndex) => {\n                    let activeCellAround = 0;\n                    const prevRowIndex = rowIndex - 1;\n                    const prevCellIndex = cellIndex - 1;\n                    for(let i = prevRowIndex; i < prevRowIndex + 3; i++) {\n                        if(i >= 0 && state.data[i]) {\n                            for(let j = prevCellIndex; j < prevCellIndex + 3; j++) {\n                                const isSamePosition = i === rowIndex && j === cellIndex;\n                                if(!isSamePosition && j >= 0 && state.data[i][j]) {\n                                    activeCellAround++;\n                                }\n                            }\n                        }\n                    }\n\n                    const cellNextValue = state.rules[+cell].includes(activeCellAround);\n                    newRow.push(cellNextValue);\n                })\n                nextData.push(newRow);\n            });\n            state.data = nextData;\n\n\n\n            /// run is auto playing\n            const canDoNext = state.isAuto && getters.isSizeMatches;\n            commit(\"createTimeout\", () => {\n                if(canDoNext) dispatch(\"generateData\")\n            })\n        },\n        toggleIsAuto({ commit, dispatch, state }) {\n            commit(\"set\", [\"isAuto\", !state.isAuto]);\n            if(state.isAuto) dispatch(\"generateData\");\n        }\n    }\n})"]}]}